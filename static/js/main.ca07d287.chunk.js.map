{"version":3,"sources":["components/Expenses/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/Expenseitems.js","components/Expenses/Expenseslist.js","components/Charts/ChartBar.js","components/Charts/Chart.js","components/Expenses/ExpensesCharts.js","components/Expenses/Expenses.js","components/NewExpense/Emptyform.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","useState","year","setYear","onYearFilter","value","onChange","event","target","ExpenseDate","month","date","toLocaleString","day","getFullYear","Expenseitem","title","amount","Expenseslist","Arr","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","console","log","style","height","label","chart","dataPoints","totalMaximums","max","dataPoint","ExpenseCharts","chartDataPoints","Expe","val","getMonth","Expenses","yearfilter","setyearFilter","exp","filter","newexp","toString","yearFilter","Emptyform","onClick","changeformvalue","ExpenseForm","setTitle","setAmount","setDate","isFormOpen","setisFormOpen","onSubmit","preventDefault","ExpenseData","Date","onSaveExpenseData","type","min","step","NewExpense","data","random","onNewExpenseData","dummyExpense","App","newExpense","setnewExpense","prevExpense","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ca07d287.chunk.js","sourcesContent":["import './Card.css'\nfunction Card(props) {\n    const classes= 'card ' + props.className;\n    return (\n        <div className={classes}>{props.children}</div>\n    );\n}\nexport default Card;","import React,  { useState } from 'react';\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n    const [year, setYear] = useState('2020');\n    const yearChangeHandler = (event) => {\n        setYear(event.target.value);\n    }\n    props.onYearFilter(year);\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value = {year} onChange={yearChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css'\nfunction ExpenseDate(props) {\n    const month=props.date.toLocaleString('en-US', {month: 'long'});\n    const day=props.date.toLocaleString('en-US', {day: '2-digit'});\n    const year=props.date.getFullYear();\n    return (\n        <div className='expense-date'>\n         <div className='expense-date__month'>{month}</div>\n        <div className='expense-date__day'>{day}</div>\n        <div className='expense-date__year'>{year}</div>\n        </div>\n    )\n}\nexport default ExpenseDate;","import React from 'react';\nimport './Expenseitems.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from './Card';\nfunction Expenseitem(props) {\n    return (\n        <Card className='expense-item'>\n         <div className='expense-item__description'>   \n        <ExpenseDate date={props.date}/>    \n        </div>\n        <div className='expense-item__description'>{props.title}</div>\n        <div className='expense-item__price'>{props.amount}</div>\n        </Card>\n    );\n}\nexport default Expenseitem;","import './Expenseslisst.css';\nimport Expense  from './Expenseitems';\n\nconst Expenseslist = props => {\n    if(props.Arr.length === 0)\n    return (\n        <h2 className='expenses-list__fallback'> No value found </h2>\n    );\n\n    return (\n     props.Arr.map((expense) => (\n        <Expense \n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n        />\n    )));\n\n}\n\nexport default Expenseslist;\n","import React from 'react';\nimport './ChartBar.css';\n\nconst ChartBar = (props) =>\n{\n    let barFillHeight = '0%';\n    if(props.maxValue>0)\n    {\n        barFillHeight=Math.round((props.value/props.maxValue)*100) + '%';\n    }\n    console.log(barFillHeight);\n    return (\n        <div className='chart-bar'>\n          <div className='chart-bar__inner'>\n            <div\n              className='chart-bar__fill'\n              style={{ height: barFillHeight }}\n            ></div>\n          </div>\n          <div className='chart-bar__label'>{props.label}</div>\n        </div>\n      );\n};\nexport default ChartBar;","import React from 'react';\nimport './Chart.css'\nimport ChartBar from './ChartBar';\n\nconst chart = (props) =>\n{\n    const dataPoints = props.dataPoints.map(dataPoints => dataPoints.value);\n    const totalMaximums = Math.max(...dataPoints);\n    console.log(totalMaximums);\n    return (\n        <div className='chart'>\n           {props.dataPoints.map((dataPoint) => (\n                <ChartBar key={dataPoint.label}\n                value = {dataPoint.value}\n                maxValue = {totalMaximums}\n                label = {dataPoint.label}\n                />\n            ))}\n        </div>\n    );\n    \n};\nexport default chart;","import React from 'react';\nimport Chart from '../Charts/Chart';\n\nconst ExpenseCharts = (props) =>\n{\n    const chartDataPoints = [\n        {label : 'jan', value :0},\n        {label : 'feb', value :0},\n        {label : 'march', value :0},\n        {label : 'april', value :0},\n        {label : 'may', value :0},\n        {label : 'jun', value :0},\n        {label : 'july', value :0},\n        {label : 'august', value :0},\n        {label : 'september', value :0},\n        {label : 'october', value :0},\n        {label : 'november', value :0},\n        {label : 'december', value :0},\n    ];\n    for (const val of props.Expe)\n    {\n        const month = val.date.getMonth();\n        chartDataPoints[month].value +=val.amount;\n        console.log(chartDataPoints[month].value);\n    }\n    return <Chart dataPoints = {chartDataPoints}/>\n}\nexport default ExpenseCharts;","import './Expenses.css';\nimport Card from './Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport React, { useState }  from 'react';\nimport Expenseslist from './Expenseslist';\nimport ExpenseCharts from './ExpensesCharts';\n\nfunction Expenses(props)\n{\n    const [yearfilter, setyearFilter] = useState('2020');\n    const expenseFilterHandler = (yearFilter) => {\n         setyearFilter(yearFilter);\n}\nconst val = props.exp.filter(newexp => {\n    return newexp.date.getFullYear().toString() === yearfilter;\n});\n    return (\n        <Card className='expenses'>\n        <ExpenseCharts Expe = {val} /> \n        <ExpensesFilter onYearFilter = {expenseFilterHandler}/>  \n        <Expenseslist Arr = {val} /> \n        </Card>\n    );\n};\nexport default Expenses;","import './ExpenseForm.css'\n\nconst Emptyform = props => {\n    const expensehandler = () =>\n    {\n        props.changeformvalue();\n    }\n    return (\n            <div className='new-expense__actions'>\n                <button onClick= {expensehandler}> Add a New Expense </button>\n               </div> \n    );\n}\nexport default Emptyform;","import './ExpenseForm.css';\nimport React, { useState } from 'react';\nimport Emptyform from './Emptyform';\nconst ExpenseForm = (props) => {\n    const [title, setTitle] = useState('');\n    const [amount, setAmount] = useState('');\n    const [date, setDate] = useState('');\n    const [isFormOpen, setisFormOpen] = useState(true);\n    const titleChangeHandler = (event) =>{\n        setTitle(event.target.value);\n    }\n    const amountChangeHandler = (event) =>{\n        setAmount(event.target.value);\n    }\n    const dateChangeHandler = (event) =>{\n        setDate(event.target.value);\n    }\n    const formChangeHandler = (event) =>{\n        event.preventDefault();\n\n        const ExpenseData = {\n            title : title,\n            amount : amount,\n            date : new Date(date)\n        };\n        console.log(ExpenseData);\n        props.onSaveExpenseData(ExpenseData);\n        setTitle('');\n        setDate('');\n        setAmount('');     \n    }\n    const emptyformhandler = (event) =>\n    {\n        event.preventDefault();\n        setisFormOpen(false);\n    }\n    const changeformvalue = () => {\n        setisFormOpen(true);\n    }\n    \n        return(\n            <div>\n                {\n            isFormOpen ? <form onSubmit={formChangeHandler}>\n                <div className='new-expense__controls'>\n                 <div className='new-expense__controls'>\n                     <label>title</label>\n                     <input type='text' onChange={titleChangeHandler} value={title}/>\n                 </div>\n                 <div className='new-expense__controls'>\n                     <label>amount</label>\n                     <input type='number' min='0.01' step='0.01' onChange={amountChangeHandler} value={amount}/>\n                 </div>\n                 <div className='new-expense__controls'>\n                     <label>date</label>\n                     <input type='date' min='2019-2-2' max='2025-2-2' onChange={dateChangeHandler} value={date}/>\n                 </div>\n                </div>\n                <div className='new-expense__actions'>\n                    <button type='submit'>ADD</button>\n                    <button  onClick={emptyformhandler}>CANCEL</button>\n                </div>\n            </form> : <Emptyform changeformvalue = {changeformvalue}/>\n}\n            </div>\n        );\n}\nexport default ExpenseForm;","import './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\nconst NewExpense = (props) => {\n   const addExpenseHandler = (ExpenseData) => {\n        const data = {\n            id : Math.random().toString(),\n            ...ExpenseData\n        };\n       // console.log(data);\n        props.onNewExpenseData(data);\n    }\n    return(\n        <div className='new-expense'>\n       <ExpenseForm onSaveExpenseData = {addExpenseHandler}/>\n       </div>\n    );\n}\nexport default NewExpense;","import Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport React, { useState } from 'react';\nconst dummyExpense = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [newExpense, setnewExpense] = useState(dummyExpense);\n  const newExpenseHandler = data => {\n    setnewExpense(prevExpense => {\n      return [data, ...prevExpense];\n    }\n  )};\n  console.log(newExpense);\n  return (\n    <div>\n      <NewExpense onNewExpenseData = {newExpenseHandler}/>\n      <Expenses exp={newExpense}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}